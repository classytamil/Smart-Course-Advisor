# -*- coding: utf-8 -*-
"""student_learning_dataset-mdel.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19h55M2v_6E-gqiB4bsDGzYdMFQD4N-nT
"""

import pandas as pd

df = pd.read_csv("student_learning_dataset.csv")
df.head()

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder

# Encode categorical variables
encoder = LabelEncoder()
df['completion_status'] = encoder.fit_transform(df['completion_status'])
df['next_level'] = encoder.fit_transform(df['next_level'])

# Features and target
X = df[['quiz_score', 'time_spent', 'completion_status']]
y = df['next_level']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.ensemble import RandomForestClassifier

rf = RandomForestClassifier(n_estimators=100, random_state=42)
rf.fit(X_train, y_train)

from sklearn.metrics import accuracy_score, classification_report

y_pred = rf.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

new_data = pd.DataFrame([[80, 180, 1]], columns=["quiz_score", "time_spent", "completion_status"])
prediction = rf.predict(new_data)

print("Predicted Next Level:", prediction[0])

"""## Save The Model"""

import joblib
# Save model
joblib.dump(rf, "random_forest_model.pkl")

print("âœ… Model saved as random_forest_model.pkl")

"""## Predictions"""

# Load model
model = joblib.load("random_forest_model.pkl")

from sklearn.metrics import accuracy_score, classification_report

y_pred = model.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

new_data = pd.DataFrame([[10, 1890, 1]], columns=["quiz_score", "time_spent", "completion_status"])
prediction = model.predict(new_data)

print("Predicted Next Level:", prediction[0])